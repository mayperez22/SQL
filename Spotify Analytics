-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL. 

-- Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

-- Then I inserted the Spotify Data .csv into the table.

-- Next, I explored the data using the following SQL: 


--Which artist has the most songs in the Top 50 list?
SELECT artist_name, COUNT(track_name) AS 'Number of tracks'
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY COUNT(track_name) DESC
LIMIT 2;


--Which tracks have a popularity of 90?
SELECT track_name, popularity
FROM BIT_DB.Spotifydata
WHERE popularity LIKE '90';


--What is the average danceability artist?
SELECT artist_name, AVG(danceability) AS 'Avg. Danceability'
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

--Which tracks are the top 10 based on popularity?
SELECT track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;


--What is the shortest track?
SELECT track_name,MIN(duration_ms)
FROM BIT_DB.Spotifydata;


--What is the longest track?
SELECT track_name,MAX(duration_ms)
FROM BIT_DB.Spotifydata;


--How many songs does Olivia Rodrigo have on the Top 50 list? List them.
SELECT artist_name,track_name
FROM BIT_DB.Spotifydata
WHERE artist_name LIKE 'Olivia Rodrigo'
ORDER BY artist_name;
